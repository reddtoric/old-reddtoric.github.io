{"version":3,"sources":["components/Nav/Nav.js","components/Nav/index.js","App.js","index.js"],"names":["Toggle","_ref","showNav","handleClick","react_default","a","createElement","className","onClick","Icon_default","path","mdiClose","mdiMenu","Nav","_ref2","pages","map","page","showInNav","react_router_dom","key","id","exact","to","activeClassName","name","IndexPage","lazy","__webpack_require__","e","then","bind","ProjectsPage","DisorientisPage","NotFoundPage","component","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","toggleNav","assertThisInitialized","closeNav","setState","document","activeElement","blur","Fragment","components_Nav","react","fallback","react_router","concat","process","Date","getFullYear","Component","ReactDOM","render","App_App","getElementById"],"mappings":"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","file":"static/js/main.c3b9d27a.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Icon from '@mdi/react';\nimport { mdiMenu, mdiClose } from '@mdi/js';\n\n\nimport './Nav.sass';\n\n\nexport function Toggle ({showNav, handleClick}) {\n  return (\n    <button className=\"nav-toggle\" onClick={handleClick}>\n      {showNav ?\n        <Icon className=\"close-icon\" path={mdiClose} />\n        : <Icon className=\"menu-icon\" path={mdiMenu} /> \n      }\n    </button>\n  )\n}\n\nexport default ({showNav, pages, handleClick}) => (\n  <nav className={showNav ? \"nav-show\" : \"\"}>\n    <div className=\"nav-aligner\">\n      {pages.map(page => {\n        if (page.showInNav){\n          return (\n            <NavLink \n              key={page.id}\n              exact\n              className=\"nav-link\" \n              to={page.path}\n              activeClassName=\"active\"\n              onClick={handleClick}\n            >\n              <span>\n                {page.name}\n              </span>\n            </NavLink>\n          )\n        }\n        else{\n          return null;\n        }\n      })}\n    </div>\n  </nav>\n)","import Nav, { Toggle as NavToggle } from './Nav';\nexport default Nav;\nexport { NavToggle };","import React, { \n    Component, \n    Suspense, \n    lazy \n} from 'react';\nimport {\n  HashRouter as Router,\n  Route,\n  Switch\n} from 'react-router-dom';\n\n\n//components\nimport Nav, { NavToggle } from \"components/Nav\";\n\n\nimport './App.sass';\n\n\n//pages\nconst IndexPage = lazy(() => import('./routes/index.js'));\nconst ProjectsPage = lazy(() => import('./routes/projects.js'));\nconst DisorientisPage = lazy(() => import('./routes/projects/disorientis.js'));\nconst NotFoundPage = lazy(() => import('./routes/404.js'));\nconst ComingSoonPage = lazy(() => import('./routes/comingsoon.js'));\n\n\nconst pages = [\n    {\n        id: 0,\n        showInNav: true,\n        path: \"/\",\n        name: \"About\",\n        component: IndexPage\n    },{\n        id: 1,\n        showInNav: true,\n        path: \"/projects\",\n        name: \"Projects\",\n        component: ProjectsPage\n    },{\n        id: 2,\n        path: \"/blog\",\n        name: \"Blog\",\n        component: ComingSoonPage\n    },{\n        id: 3,\n        path: \"/projects/disorientis\",\n        name: \"Disorentis\",\n        component: DisorientisPage\n    }\n]\n\n// eslint-disable-next-line\n{/*\n//https://www.peterbe.com/plog/react-16.6-with-suspense-and-lazy-loading-components-with-react-router-dom\nfunction WaitingComponent(Component) {\n  return props => (\n    <Suspense fallback={<div>Loading...</div>}>\n      <Component {...props} />\n    </Suspense>\n  );\n}\n*/}\n\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showNav: false,\n    }\n    \n    //required bind\n    this.toggleNav = this.toggleNav.bind(this);\n    this.closeNav = this.closeNav.bind(this);\n  }\n  \n  toggleNav() {\n    this.setState((state) => ({\n      showNav: !state.showNav,\n    }));\n  }\n  \n  closeNav(){\n    this.setState({\n      showNav: false,\n    });\n    \n    //allows nav container to hide correctly when user uses keyboard\n    document.activeElement.blur();\n  }\n  \n  render(){\n    const siteTitle = \"Ed Devs\";\n    \n    return(\n      <Router>\n        <React.Fragment>\n          <header>\n            <span className=\"site-title\">{siteTitle}</span>\n          </header>\n          \n          <NavToggle showNav={this.state.showNav} handleClick={this.toggleNav} />\n          <Nav showNav={this.state.showNav} pages={pages} handleClick={this.closeNav} />\n          \n          <Suspense fallback={<div>Loading...</div>}>\n            <Switch>\n              {pages.map(page => (\n                <Route \n                  key={page.id}\n                  exact\n                  path={`${process.env.PUBLIC_URL}${page.path}`}\n                  component={page.component}\n                />\n              ))}\n              <Route component={NotFoundPage} />\n            </Switch>\n          </Suspense>\n        \n          <footer>\n            <span>&copy; 2017-{new Date().getFullYear()} {siteTitle}</span>\n          </footer>\n        </React.Fragment>\n      </Router>\n    )\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <App />\n, document.getElementById('root'));"],"sourceRoot":""}