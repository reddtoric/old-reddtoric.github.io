{"version":3,"sources":["components/Nav/Nav.js","components/Nav/index.js","App.js","index.js"],"names":["Toggle","_ref","showNav","handleClick","react_default","a","createElement","className","onClick","Icon_default","path","mdiClose","mdiMenu","Nav","_ref2","pages","map","page","showInNav","external","react_router_dom","key","id","target","to","activeClassName","name","exact","IndexPage","lazy","__webpack_require__","e","then","bind","ProjectsPage","DisorientisPage","NotFoundPage","ComingSoonPage","component","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","toggleNav","assertThisInitialized","closeNav","setState","document","activeElement","blur","Fragment","components_Nav","react","fallback","react_router","window","location","href","concat","process","Date","getFullYear","Component","ReactDOM","render","App_App","getElementById"],"mappings":"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","file":"static/js/main.dd4a640d.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Icon from '@mdi/react';\r\nimport { mdiMenu, mdiClose } from '@mdi/js';\r\n\r\n\r\nimport './Nav.sass';\r\n\r\n\r\nexport function Toggle ({showNav, handleClick}) {\r\n  return (\r\n    <button className=\"nav-toggle\" onClick={handleClick}>\r\n      {showNav ?\r\n        <Icon className=\"close-icon\" path={mdiClose} />\r\n        : <Icon className=\"menu-icon\" path={mdiMenu} /> \r\n      }\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default ({showNav, pages, handleClick}) => (\r\n  <nav className={showNav ? \"nav-show\" : \"\"}>\r\n\t<div className=\"nav-align-wrapper\">\r\n    <div className=\"nav-aligner\">\r\n      {pages.map(page => {\r\n        if (page.showInNav){\r\n\t\t  if (page.external){\r\n\t\t\treturn (\r\n\t\t\t  <NavLink\r\n\t\t\t    key={page.id}\r\n\t\t\t\tclassName=\"nav-link\"\r\n\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\tto={page.path}\r\n                activeClassName=\"active\"\r\n                onClick={handleClick}\r\n              >\r\n                <span>\r\n                  {page.name}\r\n                </span>\r\n              </NavLink>\r\n\t\t    )\r\n\t\t  }\r\n\t\t\t\r\n          return (\r\n            <NavLink \r\n              key={page.id}\r\n              exact\r\n              className=\"nav-link\" \r\n              to={page.path}\r\n              activeClassName=\"active\"\r\n              onClick={handleClick}\r\n            >\r\n              <span>\r\n                {page.name}\r\n              </span>\r\n            </NavLink>\r\n          )\r\n        }\r\n        else{\r\n          return null;\r\n        }\r\n      })}\r\n    </div>\r\n    </div>\r\n  </nav>\r\n)","import Nav, { Toggle as NavToggle } from './Nav';\r\nexport default Nav;\r\nexport { NavToggle };","import React, { \r\n    Component, \r\n    Suspense, \r\n    lazy \r\n} from 'react';\r\nimport {\r\n  HashRouter as Router,\r\n  Route,\r\n  Switch\r\n} from 'react-router-dom';\r\n\r\n//components\r\nimport Nav, { NavToggle } from \"components/Nav\";\r\n\r\n\r\nimport './App.sass';\r\n\r\n\r\n//pages\r\nconst IndexPage = lazy(() => import('./routes/index.js'));\r\nconst ProjectsPage = lazy(() => import('./routes/projects.js'));\r\nconst DisorientisPage = lazy(() => import('./routes/projects/disorientis.js'));\r\nconst NotFoundPage = lazy(() => import('./routes/404.js'));\r\nconst ComingSoonPage = lazy(() => import('./routes/comingsoon.js'));\r\n\r\n\r\nconst pages = [\r\n  {\r\n    id: 0,\r\n    showInNav: true,\r\n    path: \"/\",\r\n    name: \"About\",\r\n    component: IndexPage\r\n  },{\r\n    id: 1,\r\n    showInNav: true,\r\n    path: \"/projects\",\r\n    name: \"Projects\",\r\n    component: ProjectsPage\r\n  },{\r\n    id: 2,\r\n    path: \"/blog\",\r\n    name: \"Blog\",\r\n    component: ComingSoonPage\r\n  },{\r\n    id: 3,\r\n    path: \"/projects/disorientis\",\r\n    name: \"Disorentis\",\r\n    component: DisorientisPage\r\n  },{\r\n\tid: 4,\r\n    showInNav: true,\r\n\texternal: true,\r\n\tpath: \"https://eddevs.com/resume\",\r\n\tname: \"Resume\",\r\n\tcomponent: ComingSoonPage\r\n  }\r\n];\r\n\r\n// eslint-disable-next-line\r\n{/*\r\n//https://www.peterbe.com/plog/react-16.6-with-suspense-and-lazy-loading-components-with-react-router-dom\r\nfunction WaitingComponent(Component) {\r\n  return props => (\r\n    <Suspense fallback={<div>Loading...</div>}>\r\n      <Component {...props} />\r\n    </Suspense>\r\n  );\r\n}\r\n*/}\r\n\r\n\r\nexport default class App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showNav: false,\r\n    }\r\n    \r\n    //required bind\r\n    this.toggleNav = this.toggleNav.bind(this);\r\n    this.closeNav = this.closeNav.bind(this);\r\n  }\r\n  \r\n  toggleNav() {\r\n    this.setState((state) => ({\r\n      showNav: !state.showNav,\r\n    }));\r\n  }\r\n  \r\n  closeNav(){\r\n    this.setState({\r\n      showNav: false,\r\n    });\r\n    \r\n    //allows nav container to hide correctly when user uses keyboard\r\n    document.activeElement.blur();\r\n  }\r\n  \r\n  render(){\r\n    const siteTitle = \"Ed Devs\";\r\n    \r\n    return(\r\n      <Router>\r\n        <React.Fragment>\r\n          <header>\r\n            <span className=\"site-title\">{siteTitle}</span>\r\n          </header>\r\n          \r\n          <NavToggle showNav={this.state.showNav} handleClick={this.toggleNav} />\r\n          <Nav showNav={this.state.showNav} pages={pages} handleClick={this.closeNav} />\r\n          \r\n          <Suspense fallback={<main>Loading...</main>}>\r\n            <Switch>\r\n              {pages.map(page => {\r\n\t\t\t    if (page.external){\r\n\t\t\t\t  return <Route \r\n                    key={page.id}\r\n\t\t\t\t    component={() => {\r\n\t\t\t\t\t  window.location.href = `${page.path}`;\r\n\t\t\t\t\t  return null;\r\n\t\t\t\t    }}\r\n                  />\r\n                }\r\n\t\t\t  \r\n\t\t\t    return <Route \r\n                  key={page.id}\r\n                  exact\r\n                  path={`${process.env.PUBLIC_URL}${page.path}`}\r\n                  component={page.component}\r\n                />\r\n\t\t\t  })}\r\n              <Route component={NotFoundPage} />\r\n            </Switch>\r\n          </Suspense>\r\n        \r\n          <footer>\r\n            <span>&copy; 2017-{new Date().getFullYear()} {siteTitle}</span>\r\n          </footer>\r\n        </React.Fragment>\r\n      </Router>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <App />\r\n, document.getElementById('root'));"],"sourceRoot":""}